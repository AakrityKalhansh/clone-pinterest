{"version":3,"sources":["component/Header.js","component/Pin.js","component/Mainboard.js","api/unsplash.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","useState","input","setInput","Wrapper","LogoWrapper","IconButton","HomePageButton","href","FollowingButton","SearchWrapper","SearchBarWrapper","type","onChange","e","target","value","onClick","preventDefault","onSubmit","IconsWrapper","styled","div","HomeButtons","Pin","urls","Container","src","regular","alt","Mainboard","pins","console","log","map","pin","index","axios","create","baseURL","headers","Authorization","App","setNewPins","getImages","term","unsplash","get","params","query","useEffect","promises","pinData","forEach","pinTerm","push","then","res","results","data","concat","sort","a","b","Promise","all","getNewPins","className","newPins","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb11f460.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport PinterestIcon from '@material-ui/icons/Pinterest';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport TextsmsIcon from '@material-ui/icons/Textsms';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nfunction Header(props) {\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const onSearchSubmit = (e) =>{\r\n        e.preventDefault();\r\n        props.onSubmit(input);\r\n        \r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <LogoWrapper>\r\n                <IconButton>\r\n                <PinterestIcon />\r\n                </IconButton>\r\n            </LogoWrapper>\r\n          <HomePageButton>\r\n              <a href=\"/\">HomePage</a>\r\n          </HomePageButton>\r\n          <FollowingButton>\r\n                <a href=\"/\">Following</a>\r\n          </FollowingButton>\r\n          <SearchWrapper>\r\n              <SearchBarWrapper>\r\n                <IconButton>\r\n                    <SearchIcon />\r\n                </IconButton>\r\n                <form>\r\n                    <input type = \"text\" onChange={(e) => setInput(e.target.value)}/>\r\n                    <button type = \"submit\" onClick={onSearchSubmit}></button>\r\n                </form>\r\n              </SearchBarWrapper>\r\n          </SearchWrapper>\r\n          <IconsWrapper>\r\n                <IconButton>\r\n                    <NotificationsIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <TextsmsIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <FaceIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <KeyboardArrowDownIcon/>\r\n                </IconButton> \r\n          </IconsWrapper> \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Wrapper = styled.div`\r\ndisplay:flex;\r\nalign-items: center;\r\nheigth: 56px;\r\npadding: 12px 4px 4px 16px;\r\nbackground-color: white;\r\ncolor: black;\r\n`\r\n\r\nconst LogoWrapper = styled.div`\r\n.MuiSvgIcon-root {\r\n    color: #e60023;\r\n    font-size: 32px;\r\n    cursor: pointer;\r\n}\r\n`\r\nconst HomeButtons = styled.div`\r\ndisplay: flex;\r\nheight: 48px;\r\nmin-width: 123px;\r\nalign-items: center;\r\njustify-content: center;\r\nborder-radius: 24px;\r\ncursor: pointer;\r\n`\r\n\r\nconst HomePageButton = styled(HomeButtons)`\r\nbackground-color: rgb(17, 17, 17);\r\n\r\na{\r\n    text-decoration: none;\r\n    color: white;\r\n    font-weight: 700;\r\n}\r\n`\r\n\r\nconst FollowingButton = styled(HomeButtons)`\r\nbackground-color: white;\r\n\r\na{\r\n    text-decoration: none;\r\n    color: black;\r\n    font-weight: 700;\r\n}\r\n:hover {\r\n    background-color: #e1e1e1;\r\n}\r\n`\r\nconst SearchWrapper =  styled.div` \r\n    flex: 1;\r\n `   \r\n\r\nconst SearchBarWrapper = styled.div`\r\n    background-color: #efefef;\r\n    display: flex;\r\n    heigth: 58px;\r\n    width: 100%;\r\n    border-radius: 50px;\r\n    border: none;\r\n    padding-left: 10px;\r\n\r\n    form {\r\n        display: flex;\r\n        flex: 1;\r\n    }\r\n\r\n    form > input {\r\n        background-color:transparent;\r\n        border: none;\r\n        width: 100%;\r\n        margin-left: 5px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    form > button {\r\n        display: none;\r\n    }\r\n\r\n    input:focus {\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst IconsWrapper = styled.div``","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Pin(props) {\r\n\r\n    let {urls} = props;\r\n    return (\r\n        <Wrapper> \r\n            <Container>\r\n                <img src={urls?.regular} alt=\"pin\"/>\r\n            </Container>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Pin;\r\n\r\nconst Wrapper = styled.div`\r\n    display: inline-flex;\r\n    padding: 8px;\r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    width: 236px;\r\n\r\n    img{\r\n        display: flex;\r\n        width: 100%;\r\n        cursor: zoom-in;\r\n        border-radius: 16px;\r\n        object-fit: cover;\r\n    }\r\n`\r\n","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport Pin from \"./Pin\";\r\n\r\nfunction Mainboard(props) {\r\n\r\n    let { pins } = props;\r\n    console.log(pins);\r\n    return (\r\n        <Wrapper>\r\n            <Container>\r\n                {pins.map((pin, index)=>{\r\n                    let {urls} = pin;\r\n                   return <Pin key = {index} urls={urls}/>\r\n            })}\r\n            </Container>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Mainboard;\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: white;\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-top: 15px;\r\n    justify-content: center;\r\n`\r\nconst Container = styled.div`\r\n  \r\n    column-count: 5;\r\n    column-gap:10px;\r\n    margin: 0 auto;\r\n    height:100%;\r\n    max-width: 1260px;\r\n    background-color: white;\r\n`","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.unsplash.com/\",\r\n    headers: {\r\n        Authorization: \"Client-ID jFdNg1c1MO7uVvtm_y-1xZctCtH5RYyjgJPpgJoQArE\"\r\n\r\n    }\r\n})","import React,{useState, useEffect} from 'react'\nimport './App.css';\nimport Header from './component/Header';\nimport Mainboard from './component/Mainboard';\nimport unsplash from  \"./api/unsplash\";\n\nfunction App() {\n  const [pins, setNewPins] = useState([])\n\n  const getImages = (term)=>{\n    return unsplash.get(\"https://api.unsplash.com/search/photos\",{\n    params: {\n      query: term\n    }\n    });\n  };\n\n\n\n  const onSearchSubmit = (term)=>{\n    console.log(\"on search submit\", term)\n    getImages(term).then((res) => {\n      let results = res.data.results;\n\n      let  newPins = [\n        ...results,\n        ...pins,\n      ]\n\n      newPins.sort(function(a,b) {\n        return 0.5;\n      });\n      setNewPins(newPins);\n    })\n  }\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n\n    let pins=['ocean','Tokyo','dogs','cats']\n\n    pins.forEach((pinTerm)=>{\n      promises.push(\n        getImages(pinTerm).then((res)=>{\n          let results = res.data.results;\n\n          pinData = pinData.concat(results);\n\n          pinData.sort(function(a,b){\n            return 0.5;\n        });\n        })\n      );\n    });\n    Promise.all(promises).then(()=>{\n      setNewPins(pinData);\n    });\n  }\n\n  \n  useEffect(() => {\n    getNewPins();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header onSubmit={onSearchSubmit}/>\n      <Mainboard pins={pins}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}